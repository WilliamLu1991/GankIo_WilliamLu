apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'tinker-support.gradle'
apply from: 'multiple-channel.gradle'

android {
    signingConfigs {
        release {
            keyAlias 'williamlu'
            keyPassword 'williamlu'
            storeFile file('../gankio_williamlu.jks')
            storePassword 'williamlu'
        }
        debug {
            keyAlias 'williamlu'
            keyPassword 'williamlu'
            storeFile file('../gankio_williamlu.jks')
            storePassword 'williamlu'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            //versionNameSuffix "_debug"
        }
    }

    /*productFlavors {
        official {}
        xiaomi {}
        qh360 {}
        huawei {}
        tencent {}
        wandoujia {}

        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }*/

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "GankIo-V${defaultConfig.versionName}-Build${defaultConfig.versionCode}-${buildType.name}.apk"
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["design"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["testRunner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    //debugImplementation rootProject.ext.dependencies["leakcanary-debug"]
    //releaseImplementation rootProject.ext.dependencies["leakcanary-release"]
    //debugImplementation rootProject.ext.dependencies["leakcanary-fragment"]
    implementation project(':datalib')
    implementation project(':toolslib')
    implementation project(':widgetlib')
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["glide-loader-okhttp3"]
    api rootProject.ext.dependencies["bugly-crashreport"]
    api rootProject.ext.dependencies["bugly-tinker"]
    api rootProject.ext.dependencies["bugly-nativecrashreport"]
    api rootProject.ext.dependencies["walle"]
    api rootProject.ext.dependencies["umeng-analytics"]
    api rootProject.ext.dependencies["BRVAH"]
    api rootProject.ext.dependencies["pickerview"]
    api rootProject.ext.dependencies["matisse"]

}
